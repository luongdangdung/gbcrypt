package com.gbsofts.gbcrypt.main.ui;

import com.gbsofts.gbcrypt.config.CustomConfig;
import com.gbsofts.gbcrypt.crypto.FileCryptographal;
import com.gbsofts.gbcrypt.crypto.FileCryptographalFactory;
import com.gbsofts.gbcrypt.util.UIUtil;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.streetjava.util.SJUtil;

/**
 *
 * @author Luong Dang Dung
 */
public class DecryptFileForm extends javax.swing.JFrame {

    static Logger logger = LogManager.getLogger(DecryptFileForm.class.getName());
    boolean IS_REPLACE = CustomConfig.IS_REPLACE;

    /**
     * Creates new form EncryptFileForm
     */
    public DecryptFileForm() {

        initComponents();

        txtPrivateKey.setText(CustomConfig.PRIVATE_KEY_PATH);
        
        optReplaceName.setSelected(IS_REPLACE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtSourceFile = new javax.swing.JTextField();
        cmdBrowseSourceFile = new javax.swing.JButton();
        cmdDecrypt = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        optReplaceName = new javax.swing.JRadioButton();
        optOtherName = new javax.swing.JRadioButton();
        txtDestinationFile = new javax.swing.JTextField();
        cmdBrowseDestinationFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtPrivateKey = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Decrypt File");

        jLabel1.setText("Source File");

        cmdBrowseSourceFile.setText("Browse");
        cmdBrowseSourceFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseSourceFileActionPerformed(evt);
            }
        });

        cmdDecrypt.setText("Decrypt");
        cmdDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDecryptActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

        buttonGroup1.add(optReplaceName);
        optReplaceName.setText("Replace Name");
        optReplaceName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optReplaceNameActionPerformed(evt);
            }
        });

        buttonGroup1.add(optOtherName);
        optOtherName.setText("Other name");
        optOtherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optOtherNameActionPerformed(evt);
            }
        });

        txtDestinationFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDestinationFileActionPerformed(evt);
            }
        });

        cmdBrowseDestinationFile.setText("Browse");
        cmdBrowseDestinationFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseDestinationFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optReplaceName)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(optOtherName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDestinationFile, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdBrowseDestinationFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optReplaceName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optOtherName)
                    .addComponent(txtDestinationFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowseDestinationFile))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Current Private Key");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmdBrowseSourceFile))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdDecrypt)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPrivateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSourceFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowseSourceFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdDecrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPrivateKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBrowseSourceFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseSourceFileActionPerformed
        txtSourceFile.setText(UIUtil.GET_FILE_PATH(this));
    }//GEN-LAST:event_cmdBrowseSourceFileActionPerformed

    private void cmdDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDecryptActionPerformed
        try {
            FileCryptographal crypto = FileCryptographalFactory.getInstace().create(CustomConfig.RSA_LENGTH, CustomConfig.PUBLIC_KEY_PATH, CustomConfig.PRIVATE_KEY_PATH, IS_REPLACE);
            
            if(IS_REPLACE){
                crypto.decryptFile(txtSourceFile.getText(), txtSourceFile.getText());
            }else{
                crypto.decryptFile(txtSourceFile.getText(), txtDestinationFile.getText());
            }

            UIUtil.POPUP(this, "Decrypt file successfully!");
        } catch (Exception e) {
            logger.error(SJUtil.GET_STACKTRACE(e));
        }
    }//GEN-LAST:event_cmdDecryptActionPerformed

    private void cmdBrowseDestinationFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseDestinationFileActionPerformed
        txtDestinationFile.setText(UIUtil.SAVE_FILE_PATH(this));
    }//GEN-LAST:event_cmdBrowseDestinationFileActionPerformed

    private void optReplaceNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optReplaceNameActionPerformed
        // TODO add your handling code here:
        IS_REPLACE = true;
    }//GEN-LAST:event_optReplaceNameActionPerformed

    private void txtDestinationFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDestinationFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDestinationFileActionPerformed

    private void optOtherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optOtherNameActionPerformed
        // TODO add your handling code here:
        IS_REPLACE = false;
    }//GEN-LAST:event_optOtherNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DecryptFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DecryptFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DecryptFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DecryptFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DecryptFileForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cmdBrowseDestinationFile;
    private javax.swing.JButton cmdBrowseSourceFile;
    private javax.swing.JButton cmdDecrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton optOtherName;
    private javax.swing.JRadioButton optReplaceName;
    private javax.swing.JTextField txtDestinationFile;
    private javax.swing.JLabel txtPrivateKey;
    private javax.swing.JTextField txtSourceFile;
    // End of variables declaration//GEN-END:variables
}
