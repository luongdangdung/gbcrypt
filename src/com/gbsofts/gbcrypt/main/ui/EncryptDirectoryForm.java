package com.gbsofts.gbcrypt.main.ui;

import com.gbsofts.gbcrypt.config.CustomConfig;
import com.gbsofts.gbcrypt.crypto.DirectoryCryptographal;
import com.gbsofts.gbcrypt.crypto.DirectoryCryptographalFactory;
import static com.gbsofts.gbcrypt.main.ui.GererateKeysForm.logger;
import com.gbsofts.gbcrypt.util.UIUtil;
import org.streetjava.util.SJUtil;

/**
 *
 * @author Luong Dang Dung
 */
public class EncryptDirectoryForm extends javax.swing.JFrame {

    /**
     * Creates new form EncryptDirectoryForm
     */
    public EncryptDirectoryForm() {
        initComponents();
        
        txtPublicKey.setText(CustomConfig.PUBLIC_KEY_PATH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSourceDir = new javax.swing.JTextField();
        cmdEncrypt = new javax.swing.JButton();
        cmdBrowseSourceDir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtDestinationDir = new javax.swing.JTextField();
        cmdBrowseDestinationDir = new javax.swing.JButton();
        chkReplaceName = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        txtPublicKey = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Encrypt Directory");

        jLabel1.setText("Source Directory");

        txtSourceDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSourceDirActionPerformed(evt);
            }
        });

        cmdEncrypt.setText("Encrypt");
        cmdEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEncryptActionPerformed(evt);
            }
        });

        cmdBrowseSourceDir.setText("Browse");
        cmdBrowseSourceDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseSourceDirActionPerformed(evt);
            }
        });

        jLabel2.setText("Destination Directory");

        cmdBrowseDestinationDir.setText("Browse");
        cmdBrowseDestinationDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowseDestinationDirActionPerformed(evt);
            }
        });

        chkReplaceName.setText("Replace name");

        jLabel3.setText("Current Public Key");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPublicKey, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDestinationDir, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                            .addComponent(txtSourceDir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmdBrowseSourceDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmdBrowseDestinationDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(chkReplaceName)
                    .addComponent(cmdEncrypt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSourceDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowseSourceDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDestinationDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowseDestinationDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkReplaceName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdEncrypt)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPublicKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSourceDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSourceDirActionPerformed
        txtDestinationDir.setText(UIUtil.GET_FILE_PATH(this));
    }//GEN-LAST:event_txtSourceDirActionPerformed

    private void cmdEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEncryptActionPerformed
        try{
                       
            DirectoryCryptographal dirCrypto = DirectoryCryptographalFactory.getInstance().create(CustomConfig.RSA_LENGTH, CustomConfig.PUBLIC_KEY_PATH, CustomConfig.PRIVATE_KEY_PATH, chkReplaceName.isSelected());
            
            dirCrypto.encryptDir(txtSourceDir.getText(), txtDestinationDir.getText());

            UIUtil.POPUP(this, "Encrypt directory successfully!");
        }catch(Exception e){
            logger.error(SJUtil.GET_STACKTRACE(e));
        }
    }//GEN-LAST:event_cmdEncryptActionPerformed

    private void cmdBrowseSourceDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseSourceDirActionPerformed
        txtSourceDir.setText(UIUtil.GET_DIR_PATH(this));
    }//GEN-LAST:event_cmdBrowseSourceDirActionPerformed

    private void cmdBrowseDestinationDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowseDestinationDirActionPerformed
        txtDestinationDir.setText(UIUtil.GET_DIR_PATH(this));
    }//GEN-LAST:event_cmdBrowseDestinationDirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EncryptDirectoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EncryptDirectoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EncryptDirectoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncryptDirectoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EncryptDirectoryForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkReplaceName;
    private javax.swing.JButton cmdBrowseDestinationDir;
    private javax.swing.JButton cmdBrowseSourceDir;
    private javax.swing.JButton cmdEncrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtDestinationDir;
    private javax.swing.JLabel txtPublicKey;
    private javax.swing.JTextField txtSourceDir;
    // End of variables declaration//GEN-END:variables
}
