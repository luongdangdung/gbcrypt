package com.gbsofts.gbcrypt.main.ui;

import com.gbsofts.gbcrypt.config.CustomConfig;
import com.gbsofts.gbcrypt.config.SystemConfig;
import com.gbsofts.gbcrypt.crypto.AsymCryptographal;
import com.gbsofts.gbcrypt.crypto.RSACryptography;
import com.gbsofts.gbcrypt.util.UIUtil;
import java.io.File;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.streetjava.util.SJUtil;

/**
 *
 * @author Luong Dang Dung
 */
public class GererateKeysForm extends javax.swing.JFrame {

    static Logger logger = LogManager.getLogger(GererateKeysForm.class.getName());
    
    /**
     * Creates new form GererateKeysForm
     */
    public GererateKeysForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPublicKeyPath = new javax.swing.JTextField();
        txtPrivateKeyPath = new javax.swing.JTextField();
        cmdBrowsePublicKey = new javax.swing.JButton();
        cmdBrowsePrivateKey = new javax.swing.JButton();
        cmdGenerateKeys = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generate Keys");

        jLabel1.setText("Private Key Directory");

        jLabel2.setText("Public Key Directory");

        cmdBrowsePublicKey.setText("Browse");
        cmdBrowsePublicKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowsePublicKeyActionPerformed(evt);
            }
        });

        cmdBrowsePrivateKey.setText("Browse");
        cmdBrowsePrivateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBrowsePrivateKeyActionPerformed(evt);
            }
        });

        cmdGenerateKeys.setText("Generate Keys");
        cmdGenerateKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGenerateKeysActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPrivateKeyPath))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtPublicKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdBrowsePublicKey)
                            .addComponent(cmdBrowsePrivateKey)))
                    .addComponent(cmdGenerateKeys))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPublicKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowsePublicKey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPrivateKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBrowsePrivateKey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdGenerateKeys)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBrowsePublicKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowsePublicKeyActionPerformed
        // TODO add your handling code here:
        txtPublicKeyPath.setText(UIUtil.GET_DIR_PATH(this));
    }//GEN-LAST:event_cmdBrowsePublicKeyActionPerformed

    private void cmdBrowsePrivateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBrowsePrivateKeyActionPerformed
        txtPrivateKeyPath.setText(UIUtil.GET_DIR_PATH(this));
    }//GEN-LAST:event_cmdBrowsePrivateKeyActionPerformed

    private void cmdGenerateKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGenerateKeysActionPerformed
        try{
            AsymCryptographal crypto = new RSACryptography(CustomConfig.RSA_LENGTH);
            String publicKey = txtPublicKeyPath.getText() + File.separator + SystemConfig.PUBLIC_KEY_FILE;
            String privateKey = txtPrivateKeyPath.getText() + File.separator + SystemConfig.PRIVATE_KEY_FILE;
            crypto.saveKeys(publicKey,privateKey );

            CustomConfig.PUBLIC_KEY_PATH = publicKey;
            CustomConfig.PRIVATE_KEY_PATH = privateKey;
            
            CustomConfig.WRITE_CONFIG();
            
            UIUtil.POPUP(this, "Generate keys successfully!");
        }catch(Exception e){
            logger.error(SJUtil.GET_STACKTRACE(e));
        }
    }//GEN-LAST:event_cmdGenerateKeysActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GererateKeysForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GererateKeysForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GererateKeysForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GererateKeysForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GererateKeysForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBrowsePrivateKey;
    private javax.swing.JButton cmdBrowsePublicKey;
    private javax.swing.JButton cmdGenerateKeys;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtPrivateKeyPath;
    private javax.swing.JTextField txtPublicKeyPath;
    // End of variables declaration//GEN-END:variables
}
